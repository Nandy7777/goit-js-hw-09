{"mappings":"AAAA,MAAMA,EAAOC,SAASC,cAAc,QACtBD,SAASC,cAAc,gBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,iBAMtC,IAAuBC,EAAUC,EAJjCJ,EAAKK,iBAAiB,UAEtB,gBAEuBF,EA0BT,EA1BmBC,EA0BhB,KAzBR,IAAIE,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,uBAAqBJ,QAAiBC,OAG9CI,EAAO,sBAAoBL,QAAiBC,WAmB/CO,MAAK,EAACR,SAAEA,EAAUS,MAAAC,MACjBC,QAAQC,IAAI,uBAAqBZ,QAAiBU,UAEnDG,OAAM,EAACb,SAAEA,EAAUS,MAAAK,MAClBH,QAAQC,IAAI,sBAAoBZ,QAAec","sources":["src/js/03-promises.js"],"sourcesContent":["const form = document.querySelector(`form`)\nconst delay = document.querySelector(`input[delay]`);\nconst step = document.querySelector(`input[step]`);\nconst amount = document.querySelector(`input[amount]`);\n\nform.addEventListener(`submit`, onFormSubmit);\n\nfunction onFormSubmit(){}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      // Fulfill\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      // Reject\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  });\n}\n\n// const createPromise = elm => {\n//   return new Promise((resolve, reject, position, delay) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       // Fulfill\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//     } else {\n//       // Reject\n//       reject(`❌ Rejected promise ${position} in ${delay}ms`);\n//     };\n//   });\n// };\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$47d4ff9957288465$var$form","document","querySelector","position","delay1","addEventListener","Promise","resolve","reject","Math","random","then","delay","delay2","console","log","catch","delay3"],"version":3,"file":"03-promises.c0854f1f.js.map"}