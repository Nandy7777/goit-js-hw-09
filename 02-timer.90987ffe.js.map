{"mappings":"AAAA,MAAMA,EAAWC,SAASC,cAAc,sBAClCC,EAAYF,SAASC,cAAc,UAsDzC,MAAME,EAAQ,IApDd,MAQIC,OACI,MAAMC,EAAOC,KAAKC,UAAU,GAC5BD,KAAKE,OAAOH,GAEhBI,QACI,GAAIH,KAAKI,SACL,OAEJ,MAAMC,EAAYC,KAAKC,MACvBP,KAAKI,UAAW,EAEhBJ,KAAKQ,UAAYC,aAAY,KACzB,MACMC,EADcJ,KAAKC,MACOF,EAC1BN,EAAOC,KAAKC,UAAUS,GAE5BV,KAAKE,OAAOH,KACb,KAGPE,UAAUU,GAEV,MACMC,EAASC,IACTC,EAAOF,KACPG,EAAa,GAAPD,EAWZ,MAAO,C,KARMd,KAAKgB,IAAIC,KAAKC,MAAMP,EAAKI,I,MAExBf,KAAKgB,IAAIC,KAAKC,MAAMP,EAAMI,EAAOD,I,QAE/Bd,KAAKgB,IAAIC,KAAKC,MAAMP,EAAOI,EAAOD,EAAQF,I,QAE1CZ,KAAKgB,IAAIC,KAAKC,MAAMP,EAAQI,EAAOD,EAAQF,EAZ5C,OAiBfI,IAAIG,GACA,OAAOC,OAAOD,GAAOE,SAAS,EAAG,KA/CrCC,aAAYpB,OAACA,IACTF,KAAKQ,UAAY,KACjBR,KAAKI,UAAW,EAChBJ,KAAKE,OAASA,EAEdF,KAAKF,SA8CW,CACpBI,OAKJ,UAAyBqB,KAAEA,EAAIC,MAAEA,EAAKC,QAAEA,EAAOC,QAAEA,IAC7C9B,EAAU+B,YAAc,GAAGJ,KAAQC,KAASC,KAAWC,OAH3DjC,EAASmC,iBAAiB,QAAS/B,EAAMM,MAAM0B,KAAKhC","sources":["src/js/02-timer.js"],"sourcesContent":["const startBtn = document.querySelector(`button[data-start]`);\nconst clockFace = document.querySelector(`.timer`);\n\nclass Timer {\n    constructor({onTick}) {\n        this.inrervaId = null;\n        this.isActive = false;\n        this.onTick = onTick;\n\n        this.init();\n    };\n    init() {\n        const time = this.convertMs(0)\n        this.onTick(time)\n    }\n    start() {\n        if (this.isActive) {\n            return;\n        }\n        const startTime = Date.now();\n        this.isActive = true;\n\n        this.inrervaId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = currentTime - startTime;\n            const time = this.convertMs(deltaTime);\n\n            this.onTick(time);\n        }, 1000);\n    };\n\n    convertMs(ms) {\n  // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n  // Remaining days\n    const days = this.pad(Math.floor(ms / day));\n  // Remaining hours\n    const hours = this.pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n    const minutes = this.pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n    const seconds = this.pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n    return { days, hours, minutes, seconds };\n    };\n\n    pad(value) {\n        return String(value).padStart(2, `0`);\n    };\n};\n\nconst timer = new Timer({\n    onTick: updateClockFace\n});\n\nstartBtn.addEventListener(`click`, timer.start.bind(timer));\n\nfunction updateClockFace({ days, hours, minutes, seconds }) {\n    clockFace.textContent = `${days}:${hours}:${minutes}:${seconds}`;\n}\n\n\n\n\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}"],"names":["$40d383fb392a7037$var$startBtn","document","querySelector","$40d383fb392a7037$var$clockFace","$40d383fb392a7037$var$timer","init","time","this","convertMs","onTick","start","isActive","startTime","Date","now","inrervaId","setInterval","deltaTime","ms","minute","second","hour","day","pad","Math","floor","value","String","padStart","constructor","days","hours","minutes","seconds","textContent","addEventListener","bind"],"version":3,"file":"02-timer.90987ffe.js.map"}